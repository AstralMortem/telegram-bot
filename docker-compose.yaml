version: '3'

services:
  db:
    image: postgres
    container_name: pgdb
    environment:
      POSTGRES_DB: "bot"
      POSTGRES_USER: "bot_user"
      POSTGRES_PASSWORD: "bot_password"
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    expose:
      - 5431

  backend:
    container_name: backend
    build: 
      context: .
      dockerfile: ./docker/backend/Dockerfile
    expose:
      - 8000
    env_file:
      - ./.env
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`5.101.180.7`)
      - traefik.http.routers.backend.tls=true

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    expose:
      - 3000
    env_file:
      - ./.env
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=(Host(`5.101.180.7`) && PathPrefix('/web'))
      - traefik.http.routers.backend.tls=true

  reverse-proxy:
    container_name: reverse-proxy
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:88"
    ports:
      - "88:88"
      - "8433:8433"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik/traefik.yaml:/etc/traefik/traefik.yaml
      - ./ssl:/ssl-certs/

volumes:
  pgdbdata: null
